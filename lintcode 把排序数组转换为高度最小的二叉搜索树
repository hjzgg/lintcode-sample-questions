题目链接：http://www.lintcode.com/zh-cn/problem/convert-sorted-array-to-binary-search-tree-with-minimal-height/
把排序数组转换为高度最小的二叉搜索树 查看运行结果 

给一个排序数组（从小到大），将其转换为一棵高度最小的排序二叉树。

样例
给出数组 [1,2,3,4,5,6,7], 返回

     4
   /   \
  2     6
 / \    / \
1   3  5   7
挑战
可能有多个答案，返回任意一个即可

/**
 * Definition of TreeNode:
 * class TreeNode {
 * public:
 *     int val;
 *     TreeNode *left, *right;
 *     TreeNode(int val) {
 *         this->val = val;
 *         this->left = this->right = NULL;
 *     }
 * }
 */
class Solution {
public:
    /**
     * @param A: A sorted (increasing order) array
     * @return: A tree node
     */
     
    void buildT(TreeNode * &T, vector<int> &A, int ld, int rd){
        if(ld > rd) return ;
        int mid = (ld+rd)>>1;//中值就是树的根
        T = new TreeNode(A[mid]);
        buildT(T->left, A, ld, mid-1);
        buildT(T->right, A, mid+1, rd);
    }
    TreeNode *sortedArrayToBST(vector<int> &A) {
        // write your code here
        TreeNode * T = NULL;
        buildT(T, A, 0, A.size()-1);
        return T;
    }
};



