题目链接：http://www.lintcode.com/zh-cn/problem/recover-rotated-sorted-array/
恢复旋转排序数组 查看运行结果 

给定一个旋转排序数组，在原地恢复其排序。

样例
[4, 5, 1, 2, 3] -> [1, 2, 3, 4, 5]

挑战
使用O(1)的额外空间和O(n)时间复杂度

说明
什么是旋转数组？

比如，原始数组为[1,2,3,4], 则其旋转数组可以是[1,2,3,4], [2,3,4,1], [3,4,1,2], [4,1,2,3]

class Solution {
public:
    void recoverRotatedSortedArray(vector<int> &nums) {
        // write your code here
        int k = -1;//如果没有排好序了，一定会出现前面的一个数>它后面的一个数
        for(int i=1; i<nums.size(); ++i)
            if(nums[i-1] > nums[i]){
                k = i;
                break;
            }
        if(k!=-1){
            reverse(nums.begin(), nums.begin()+k);
            reverse(nums.begin()+k, nums.end());
            reverse(nums.begin(), nums.end());
        }
    }
};
