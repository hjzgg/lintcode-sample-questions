题目链接：http://www.lintcode.com/zh-cn/problem/insert-node-in-a-binary-search-tree/
在二叉查找树中插入节点 查看运行结果 

给定一棵二叉查找树和一个新的树节点，将节点插入到树中。

你需要保证该树仍然是一棵二叉查找树。

您在真实的面试中是否遇到过这个题？ Yes
样例
给出如下一棵二叉查找树，在插入节点6之后这棵二叉查找树可以是这样的：

  2             2
 / \           / \
1   4   -->   1   4
   /             / \ 
  3             3   6
挑战
能否不使用递归？

/**
 * Definition of TreeNode:
 * class TreeNode {
 * public:
 *     int val;
 *     TreeNode *left, *right;
 *     TreeNode(int val) {
 *         this->val = val;
 *         this->left = this->right = NULL;
 *     }
 * }
 */
class Solution {
public:
    /**
     * @param root: The root of the binary search tree.
     * @param node: insert this node into the binary search tree
     * @return: The root of the new binary search tree.
     */
    TreeNode* insertNode(TreeNode* &root, TreeNode* node) {
        // write your code here
        
        //递归
        // if(!root) root = node;
        // else {
        //     if(root->val > node->val)
        //         insertNode(root->left, node);
        //     else 
        //         insertNode(root->right, node);
        // }
        
        //非递归
        if(!root) root = node;
        else {
            TreeNode *p = root;
            while(1){
                if(p->val > node->val){
                    if(!p->left) { p->left = node; break; }
                    p = p->left;
                } else {
                    if(!p->right) { p->right = node; break; }
                    p = p->right;
                }
            }
        }
        return root;
    }
};
