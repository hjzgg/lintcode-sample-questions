题目链接：http://www.lintcode.com/zh-cn/problem/add-two-numbers/
链表求和 查看运行结果 

你有两个用链表代表的整数，其中每个节点包含一个数字。数字存储按照在原来整数中相反的顺序，使得第一个数字位于链表的开头。写出一个函数将两个整数相加，用链表形式返回和。

您在真实的面试中是否遇到过这个题？ Yes
样例
给出两个链表 3->1->5->null 和 5->9->2->null，返回 8->0->8->null

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    /**
     * @param l1: the first list
     * @param l2: the second list
     * @return: the sum list of l1 and l2 
     */
    ListNode *addLists(ListNode *l1, ListNode *l2) {
        // write your code here
        int carry = 0;
        ListNode *h1=l1, *h2=l2;
        while(h1 && h2){
            h1=h1->next;
            h2=h2->next;
        }
        if(!h1 && h2)  swap(l1, l2);
        ListNode *pre_l1=NULL, *ret=l1;
        while(l1 && l2){
            l1->val = l1->val+l2->val+carry;
            carry = l1->val/10;
            l1->val %= 10;
            pre_l1 = l1;
            l1 = l1->next;
            l2 = l2->next;
        }
        
        while(l1){
            l1->val = l1->val+carry;
            carry = l1->val/10;
            l1->val %= 10;
            pre_l1 = l1;
            l1 = l1->next;
        }
        if(carry)
            pre_l1->next = new ListNode(carry);
        return ret;
    }
};
