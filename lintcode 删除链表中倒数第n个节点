题目链接：http://www.lintcode.com/zh-cn/problem/remove-nth-node-from-end-of-list/
删除链表中倒数第n个节点 查看运行结果 

给定一个链表，删除链表中倒数第n个节点，返回链表的头节点。

样例
给出链表1->2->3->4->5->null和 n = 2.

删除倒数第二个节点之后，这个链表将变成1->2->3->5->null.

注意
链表中的节点个数大于等于n

挑战
O(n)时间复杂度

/**
 * Definition of ListNode
 * class ListNode {
 * public:
 *     int val;
 *     ListNode *next;
 *     ListNode(int val) {
 *         this->val = val;
 *         this->next = NULL;
 *     }
 * }
 */
class Solution {
public:
    /**
     * @param head: The first node of linked list.
     * @param n: An integer.
     * @return: The head of linked list.
     */
    ListNode *removeNthFromEnd(ListNode *head, int n) {
        // write your code here
        ListNode *p = head;
        int nx = 0;
        while(p){
            p=p->next;
            ++nx;
        }
        if(nx==n) return head->next;
        int ny = 1;
        p = head;
        while(ny<nx-n){
            p = p->next;
            ++ny;
        }
        p->next = p->next->next;
        return head;
    }
};



