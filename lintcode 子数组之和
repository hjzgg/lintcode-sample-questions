题目链接：http://www.lintcode.com/zh-cn/problem/subarray-sum/#
子数组之和 查看运行结果 

给定一个整数数组，找到和为零的子数组。你的代码应该返回满足要求的子数组的起始位置和结束位置

样例
给出[-3, 1, 2, -3, 4]，返回[0, 2] 或者 [1, 3].

class Solution {
public:
    /**
     * @param nums: A list of integers
     * @return: A list of integers includes the index of the first number 
     *          and the index of the last number
     */
    vector<int> subarraySum(vector<int> nums){
        // write your code here
        map<int, int> mp;//map<pre_sum, index> 记录前缀和为pre_sum的位置
        mp[0] = -1;
        int sum = 0;
        vector<int> ret;
        for(int i=0; i<nums.size(); ++i){
            sum += nums[i];
            if(mp.find(sum) != mp.end()){
                ret.push_back(mp[sum]+1);
                ret.push_back(i);
                return ret;
            }
            mp[sum] = i;
        }
        return ret;
    }
};
